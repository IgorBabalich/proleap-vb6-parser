(startRule (module (moduleBody (moduleBodyElement (subStmt Sub (ambiguousIdentifier GotoStatementDemo) (argList ()) (block (blockStmt (variableStmt Dim (variableListStmt (variableSubStmt (ambiguousIdentifier Number)) , (variableSubStmt (ambiguousIdentifier MyString))))) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Number))) = (valueStmt (literal 1)))) (blockStmt (ifThenElseStmt If (ifConditionStmt (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Number)))) = (valueStmt (literal 1)))) Then (blockStmt (goToStmt GoTo (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Line1)))))) Else (blockStmt (goToStmt GoTo (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Line2)))))))) (blockStmt (lineLabel (ambiguousIdentifier Line1) :)) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier MyString))) = (valueStmt (literal "Number equals 1")))) (blockStmt (goToStmt GoTo (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier LastLine)))))) (blockStmt (lineLabel (ambiguousIdentifier Line2) :)) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier MyString))) = (valueStmt (literal "Number equals 2")))) (blockStmt (implicitCallStmt_InBlock (iCS_B_ProcedureCall (certainIdentifier LastLine)))) : (blockStmt (implicitCallStmt_InBlock (iCS_B_MemberProcedureCall (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Debug))) . (ambiguousIdentifier (ambiguousKeyword Print)) (argsCall (argCall (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier MyString)))))))))) End Sub)))) <EOF>)