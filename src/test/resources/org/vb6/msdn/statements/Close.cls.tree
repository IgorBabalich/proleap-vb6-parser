(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim (variableListStmt (variableSubStmt (ambiguousIdentifier I)) , (variableSubStmt (ambiguousIdentifier FileName))))) (blockStmt (forNextStmt For (ambiguousIdentifier I) = (valueStmt (literal 1)) To (valueStmt (literal 3)) (block (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier FileName))) = (valueStmt (valueStmt (literal "TEST")) & (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))))))) (blockStmt (openStmt Open (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier FileName)))) For Output As (valueStmt (literal #I)))) (blockStmt (printStmt Print (valueStmt (literal #I)) , (outputList (outputList_Expression (valueStmt (literal "This is a test."))))))) Next (ambiguousIdentifier I))) (blockStmt (closeStmt Close))))))) <EOF>)