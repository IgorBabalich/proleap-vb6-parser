(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (deftypeStmt DefInt (letterrange (certainIdentifier A) - (certainIdentifier K)))) (blockStmt (deftypeStmt DefStr (letterrange (certainIdentifier L) - (certainIdentifier Z)))) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier CalcVar))) = (valueStmt (literal 4)))) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier StringVar))) = (valueStmt (literal "Hello there")))) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier AnyVar))) = (valueStmt (literal "Hello")))) (blockStmt (variableStmt Dim (variableListStmt (variableSubStmt (ambiguousIdentifier Calc) (asTypeClause As (type (baseType Double))))))) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Calc))) = (valueStmt (literal 2.3455)))) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier CalcNum))) = (valueStmt (implicitCallStmt_InStmt (iCS_S_ProcedureOrArrayCall (ambiguousIdentifier ATestFunction) ( (argsCall (argCall (valueStmt (literal 4))))))))))))) (moduleBodyElement (functionStmt Function (ambiguousIdentifier ATestFunction) (argList ( (arg (ambiguousIdentifier INumber)))) (block (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier ATestFunction))) = (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier INumber)))) * (valueStmt (literal 2)))))) End Function)))) <EOF>)