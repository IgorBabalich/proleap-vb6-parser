(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim (variableListStmt (variableSubStmt (ambiguousIdentifier I)) , (variableSubStmt (ambiguousIdentifier J))))) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))) = (valueStmt (literal 20)))) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier J))) = (valueStmt (literal 30)))) (blockStmt (whileWendStmt While (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))) > (valueStmt (literal 0))) \t (block (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))) = (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))) - (valueStmt (literal 1)))))) Wend)) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))) = (valueStmt (literal 100)))) (blockStmt (whileWendStmt While (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))) > (valueStmt (literal 0))) \t (block (blockStmt (whileWendStmt While (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))) Mod (valueStmt (valueStmt (literal 15)) <> (valueStmt (literal 0)))) \t\t (block (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))) = (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))) - (valueStmt (literal 1)))))) \t Wend))) Wend))))))) <EOF>)