(startRule (module (moduleBody (moduleBodyElement (functionStmt Function (ambiguousIdentifier SomeFunction) (argList ()) \t (block (blockStmt (variableStmt Dim (variableListStmt (variableSubStmt (ambiguousIdentifier (ambiguousKeyword Text)) (asTypeClause As (type (baseType String))))))) \t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier (ambiguousKeyword Text)))) = (valueStmt (literal "Hello World")))) \t (blockStmt (goToStmt Goto (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier LineLabel1)))))) \t (blockStmt (lineLabel (ambiguousIdentifier LineLabel1) :)) \t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier (ambiguousKeyword Text)))) = (valueStmt (literal "1")))) (blockStmt (lineLabel (ambiguousIdentifier LineLabel2) :)) \t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier (ambiguousKeyword Text)))) = (valueStmt (literal "2")))) \t (blockStmt (implicitCallStmt_InBlock (iCS_B_MemberProcedureCall (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Debug))) . (ambiguousIdentifier (ambiguousKeyword Print)) (argsCall (argCall (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier (ambiguousKeyword Text))))))))))) End Function)) (moduleBodyElement (moduleBlock (block (blockStmt (implicitCallStmt_InBlock (iCS_B_ProcedureCall (certainIdentifier SomeFunction))))))))) <EOF>)