(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (openStmt Open (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Filename)))) For Output As (valueStmt (literal #A)))) (blockStmt (openStmt Open (valueStmt (literal "c:\Tmp\File")) FOR BiNaRy AS (valueStmt (literal #2)))) (blockStmt (openStmt Open (valueStmt (literal "c:/Tmp/File2")) FOR Append ACCESS READ WRITE LOCK READ WRITE AS (valueStmt (literal #B)) LEN = (valueStmt (literal 2)))) (blockStmt (variableStmt Dim (variableListStmt (variableSubStmt (ambiguousIdentifier tmp) (asTypeClause as (type (baseType String)))) , (variableSubStmt (ambiguousIdentifier content) (asTypeClause as (type (baseType String))))))) (blockStmt (lineInputStmt Line Input (valueStmt (literal #A)) , (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier tmp)))))) (blockStmt (closeStmt Close (valueStmt (literal #A)))) (blockStmt (closeStmt Close)) (blockStmt (openStmt Open (valueStmt (literal "C:\file3")) For Input as (valueStmt (literal #1)))) (blockStmt (whileWendStmt While (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_ProcedureOrArrayCall (ambiguousIdentifier Eof) ( (argsCall (argCall (valueStmt (literal 1)))))))) = (valueStmt (literal 0))) \t (block (blockStmt (lineInputStmt line input (valueStmt (literal #1)) , (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier tmp)))))) \t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier content))) = (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier content)))) + (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier tmp)))))))) Wend)) (blockStmt (closeStmt Close (valueStmt (literal #1))))))) (moduleBodyElement (subStmt (visibility Private) Sub (ambiguousIdentifier save) (argList ()) \t (block (blockStmt (openStmt Open (valueStmt (valueStmt (literal "test")) & (valueStmt (literal ".dat"))) For Output As (valueStmt (literal #1)))) \t (blockStmt (implicitCallStmt_InBlock (iCS_B_ProcedureCall (certainIdentifier Save))))) End Sub)))) <EOF>)