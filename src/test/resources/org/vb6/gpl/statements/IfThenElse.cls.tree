(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim (variableListStmt (variableSubStmt (ambiguousIdentifier IsVisible) (asTypeClause As (type (baseType Boolean))))))) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier IsVisible))) = (valueStmt (literal True)))) (blockStmt (ifThenElseStmt (ifBlockStmt If (ifConditionStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier IsVisible))))) Then \t (block (blockStmt (beepStmt Beep)) \t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier IsVisible))) = (valueStmt (literal false)))))) (ifElseBlockStmt Else \t (block (blockStmt (beepStmt Beep)) \t (blockStmt (beepStmt Beep)))) End If))))))) <EOF>)