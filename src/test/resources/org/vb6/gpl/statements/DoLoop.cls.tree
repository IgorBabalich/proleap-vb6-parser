(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim (variableListStmt (variableSubStmt (ambiguousIdentifier I))))) (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))) = (valueStmt (literal 5)))) (blockStmt (doLoopStmt Do While (valueStmt Not (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))) = (valueStmt (literal 0)))) \t (block (blockStmt (beepStmt Beep)) \t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))) -= (valueStmt (literal 1))))) Loop)) (blockStmt (doLoopStmt Do Until (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))) = (valueStmt (literal 0))) \t (block (blockStmt (beepStmt Beep)) \t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))) -= (valueStmt (literal 1))))) Loop))))))) <EOF>)